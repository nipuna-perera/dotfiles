# Set the directory we want to store zinit and plugins
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"

# Download Zinit, if it's not there yet
if [ ! -d "$ZINIT_HOME" ]; then
   mkdir -p "$(dirname $ZINIT_HOME)"
   git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
fi

# Source/Load zinit
source "${ZINIT_HOME}/zinit.zsh"

# Keybindings
bindkey -e
bindkey '^p' history-search-backward
bindkey '^n' history-search-forward
bindkey '^[w' kill-region

# History
HISTSIZE=10000
HISTFILE=~/.zsh_history
SAVEHIST=$HISTSIZE
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

# other options
setopt promptsubst

# Paths
if [[ -z "$BROWSER" && "$OSTYPE" == darwin* ]]; then
  export BROWSER='open'
fi
if [[ -z "$EDITOR" ]]; then
  export EDITOR='nvim'
fi
if [[ -z "$VISUAL" ]]; then
  export VISUAL='nvim'
fi
if [[ -z "$PAGER" ]]; then
  export PAGER='bat'
fi
if [[ -z "$MANPAGER" ]]; then
  export MANPAGER='bat --plain'
fi
if [[ -z "$LANG" ]]; then
  export LANG='en_US.UTF-8'
fi

# path variables
export BOB_PATH="/Users/mangoair/.local/share/bob/nvim-bin"

path=(
  $HOME/{,s}bin(N)
  $HOME/.local/{,s}bin(N)
  /opt/{homebrew,local}/{,s}bin(N)
  /usr/local/{,s}bin(N)
  $BOB_PATH
  $path
)

zinit wait lucid for \
                OMZL::clipboard.zsh \
                OMZL::compfix.zsh \
                OMZL::completion.zsh \
                OMZL::correction.zsh \
    atload'
        alias ..="cd .."
        alias ...="cd ../.."
        alias ....="cd ../../.."
        alias .....="cd ../../../.."
        function take() {
            mkdir -p $@ && cd ${@:$#}
        }
        alias rm="rm -rf"
        alias ls="eza"
        alias ll="eza -la"
        alias la="eza -lar"
        alias lg="lazygit"
        alias vim="nvim"
        alias c="clear"
        alias n="nvim"
        alias nz="nvim ~/.zshrc"
        alias nt="NVIM_APPNAME=lazytest nvim"
        alias ds="~/.config/dagger/dagger-switch.sh"
   ' \
                OMZL::directories.zsh \
                OMZL::git.zsh \
                OMZL::grep.zsh \
                OMZL::key-bindings.zsh \
                OMZL::spectrum.zsh \
                OMZL::functions.zsh \
                OMZL::termsupport.zsh \
                OMZP::git \
                OMZP::sudo \
                OMZP::aws \
                OMZP::kubectl \
  djui/alias-tips \
  https://github.com/junegunn/fzf/blob/master/shell/key-bindings.zsh \
  https://github.com/junegunn/fzf/blob/master/shell/completion.zsh

# Completion styling
zinit ice atclone"dircolors -b LS_COLORS > clrs.zsh" \
    atpull'%atclone' pick"clrs.zsh" nocompile'!' \
    atload'zstyle ":completion:*" list-colors "${(s.:.)LS_COLORS}"'
zinit light trapd00r/LS_COLORS

zstyle ':completion:*' menu no
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'
zstyle ':fzf-tab:complete:__zoxide_z:*' fzf-preview 'ls --color $realpath'

# Add in zsh plugins
zinit wait lucid light-mode for \
  atinit"zicompinit; zicdreplay" \
      zdharma-continuum/fast-syntax-highlighting \
  atload"_zsh_autosuggest_start" \
      zsh-users/zsh-autosuggestions \
  blockf atpull'zinit creinstall -q .' \
      zsh-users/zsh-completions

zinit ice wait lucid
zinit light Aloxaf/fzf-tab

# custom functions

# git checkout branch, fetch upstream, rebase upstream branch, push changes
gs () {
        branch="$(git rev-parse --abbrev-ref HEAD)"
        echo "\ncheckout $1\n"
        git checkout $1
        echo "\nfetch upstream \n"
        git fetch upstream
        echo "\nrebase upstream/$1 \n"
        git rebase upstream/$1
        echo "\ngit push \n"
        git push
        git checkout $branch
}

# Shell integrations
eval "$(mise activate zsh)"
eval "$(zoxide init zsh)"
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
eval "$(starship init zsh)"
